name: Promote Newest Release to Latest

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to promote (e.g., 24.12.19.15)'
        required: true
        type: string

permissions:
  contents: read
  
env:
  R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
  R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
  R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
  R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
  R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -o awscliv2.zip
          sudo ./aws/install --update || sudo ./aws/install

      - name: Promote release to latest
        run: |
          # Set AWS credentials for AWS CLI
          export AWS_ACCESS_KEY_ID=$R2_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$R2_SECRET_ACCESS_KEY
          export AWS_DEFAULT_REGION=auto
          
          RELEASE_VERSION="${{ github.event.inputs.release_version }}"
          
          # Verify the release exists
          echo "Checking if release $RELEASE_VERSION exists..."
          if ! aws s3 ls s3://$R2_BUCKET_NAME/releases/$RELEASE_VERSION/ --endpoint-url $R2_ENDPOINT --region auto > /dev/null 2>&1; then
            echo "Error: Release $RELEASE_VERSION not found in R2 bucket"
            exit 1
          fi
          
          echo "Release $RELEASE_VERSION found. Promoting to latest..."
          
          # First, delete the current penultimate folder if it exists
          echo "Deleting current penultimate folder..."
          if aws s3 ls s3://$R2_BUCKET_NAME/releases/penultimate/ --endpoint-url $R2_ENDPOINT --region auto > /dev/null 2>&1; then
            aws s3 rm s3://$R2_BUCKET_NAME/releases/penultimate/ --recursive --endpoint-url $R2_ENDPOINT --region auto
            echo "Current penultimate folder deleted"
          else
            echo "No current penultimate folder found, skipping deletion"
          fi
          
          # First, rename current latest folder to penultimate (if it exists)
          echo "Renaming current latest folder to penultimate..."
          if aws s3 ls s3://$R2_BUCKET_NAME/releases/latest/ --endpoint-url $R2_ENDPOINT --region auto > /dev/null 2>&1; then
            aws s3 mv s3://$R2_BUCKET_NAME/releases/latest/ s3://$R2_BUCKET_NAME/releases/penultimate/ \
              --recursive \
              --endpoint-url $R2_ENDPOINT \
              --region auto
            echo "Current latest folder renamed to penultimate"
          else
            echo "No current latest folder found, skipping rename to penultimate"
          fi
          
          # Now rename the target release to latest
          echo "Renaming release $RELEASE_VERSION to latest..."
          aws s3 mv s3://$R2_BUCKET_NAME/releases/$RELEASE_VERSION/ s3://$R2_BUCKET_NAME/releases/latest/ \
            --recursive \
            --endpoint-url $R2_ENDPOINT \
            --region auto
          
          # Check if rename was successful
          RENAME_EXIT_CODE=$?
          echo "Rename operation exit code: $RENAME_EXIT_CODE"
          
          if [ $RENAME_EXIT_CODE -eq 0 ]; then
            echo "Successfully promoted release $RELEASE_VERSION to latest folder"
          else
            echo "Error: Failed to promote release to latest folder"
            exit 1
          fi
          
          # List what's now in the latest folder
          echo "Contents of latest folder:"
          aws s3 ls s3://$R2_BUCKET_NAME/releases/latest/ --endpoint-url $R2_ENDPOINT --region auto

      - name: Clean up
        run: rm -rf awscliv2.zip aws/ 